= Validation Attributes

Validation attributes allow specifying conditions that variables have to meet without having to write validation logic at the start of a method.

== ValidateNotNullOrEmpty

Ensures that a `string` value is not `$null` and not an empty string.

[source,powershell]
----
function myFunction([ValidateNotNullOrEmpty()]$parameter) {
}
----

== ValidateNotNull

Ensures a value is not `$null`

[source,powershell]
----
function myFunction([ValidateNotNull()]$parameter) {
}
----

== ValidateSet

Limits the allowed values to a set of predefined values.

[source,powershell]
----
function myFunction([ValidateSet("value1", "value2")]$parameter) {
}
----

=== ValidateRange

Limits the allowed values to rang of values.

[source,powershell]
----
function myFunction([ValidateRange(23,42)]$parameter) {
}
----


== ValidateScript

The `ValidateScript` attribute allows specifying a custom validation script.

For example, a parameter can be forced to be the path of a existing file:

[source,powershell]
----
function myFunction([ValidateScript( { Test-Path $_ })]$parameter) {
}
----


== See Also

- link:https://docs.microsoft.com/en-us/powershell/scripting/developer/cmdlet/validating-parameter-input?view=powershell-5.1[Microsoft Docs: Validating Parameter Input]
- link:https://devblogs.microsoft.com/scripting/simplify-your-powershell-script-with-parameter-validation/[Scripting Blog: Simplify Your PowerShell Script with Parameter Validation]
