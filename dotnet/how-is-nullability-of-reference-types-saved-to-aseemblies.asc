= How is nullability of reference types saved to assemblies

C# 8's nullable reference types are not implemeted using the type system but using nullability attributes on properties, methods and parameters.

== Attributes

There are two attributes that save nullability information:

* `Nullable` contains a byte-value that specifies the nullability of a value.
** `0`: oblivious (code was compiled without nullable reference types enabled)
** `1`: Value is considered _not null_
** `2`: Value might be null
** For generic types, the `Nullable` attribute provides an array of byte-values specifying the nullablilty of the individual generic types and type parameters
* `NullableContext` defines the default nullability for members in a type
** The attribute consists of a byte-value with the same semantics as the `Nullable` attribute
** When there is a `NullableContext` attribute on the class, the type's members might not have a `Nullable` attribute. +
   E.g. For a class where all members are non-nullable, the compiler seems to only emit a `NullableContext` attribute for the type and omit the `Nullable` attribute for members.

== Definition of Attributes

When the `Nullable` and `NullableContext` attributes do not yet exist in a project (e.g. when targeting a framework that predates these attributes), the compiler will include a definition of these attributes in the assembly being compiled.
Because these attributes are compiler-generated, they cannot be accessed directly through reflection (e.g. using `PropertyInfo.GetCustomAttribute<NullableAttribute>`).

Instead the attributes have to be loaded by name using reflection to get nullablility information, e.g.

[source,cs]
----

// Get [Nullable] attribute for property
var nullableAttribute = property.GetCustomAttributes()
      .Where(attribue => attribue.GetType().FullName == "System.Runtime.CompilerServices.NullableAttribute")
      .SingleOrDefault();
      
// Get the nullable flags from the attribute
if (nullableAttribute != null)
{
    var flags = (byte[])nullable.GetType().GetField("NullableFlags")!.GetValue(nullable)!;
    // ...
}
----

== See Also

* link:https://github.com/dotnet/roslyn/blob/master/docs/features/nullable-metadata.md[Nullable Metadata (dotnet/roslyn GitHub Repository)]
* link:https://codeblog.jonskeet.uk/2019/02/10/nullableattribute-and-c-8/[NullableAttribute and C# 8 (Jon Skeet's coding blog)]
